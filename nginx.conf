server {
    listen 80;
    #请填写绑定证书的域名
    server_name www.tayrsi.cn; 
    #把http的域名请求转成https
    return 301 https://$host$request_uri; 
    # 资源地址
    # root  /nginx/dist/;
    # 目录浏览
    autoindex on;
    # 缓存处理
    add_header Cache-Control "no-cache, must-revalidate";
    # 请求配置
    location / {
    # 跨域
    add_header Access-Control-Allow-Origin *;
    # 返回 index.html
    try_files $uri $uri/ /index.html;
    #网站主页路径。此路径仅供参考，具体请您按照实际目录操作。
    #例如，您的网站主页在 Nginx 服务器的 /etc/www 目录下，则请修改 root 后面的 html 为 /etc/www。
    # root /nginx/dist/;
    # root /usr/share/nginx/html;
    # index  index.html index.htm;
    # index bei.html;
    }
    
}

server {
     #SSL 默认访问端口号为 443
     listen 443 ssl;
     #请填写绑定证书的域名
     server_name www.tayrsi.cn;
     #请填写证书文件的相对路径或绝对路径
     ssl_certificate /etc/nginx/ssl/tayrsi/tayrsi.cn_bundle.crt;
     #请填写私钥文件的相对路径或绝对路径
     ssl_certificate_key /etc/nginx/ssl/tayrsi/tayrsi.cn.key;
     ssl_session_timeout 5m;
     #请按照以下协议配置
     ssl_protocols TLSv1.2 TLSv1.3;
     #请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。
     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
     ssl_prefer_server_ciphers on;
     location / {
    #网站主页路径。此路径仅供参考，具体请您按照实际目录操作。
    #例如，您的网站主页在 Nginx 服务器的 /etc/www 目录下，则请修改 root 后面的 html 为 /etc/www。
    #         root /nginx/dist/;
    root /usr/share/nginx/html;
    #         index  index.html index.htm;
    index bei.html;
    }
    # 资源地址
    root  /nginx/dist/;
    # 目录浏览
    autoindex on;
    # 缓存处理
    add_header Cache-Control "no-cache, must-revalidate";
    location /master-react/ {
        # add_header Access-Control-Allow-Origin *;
        try_files $uri $uri/ /index.html;
        proxy_pass http://124.223.164.97:8090/;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
    }
 }

# portainer
server {
    listen 80;
    server_name portainer.tayrsi.cn; 
    return 301 https://$host$request_uri; 
    add_header Cache-Control "no-cache, must-revalidate";
}

server {
     listen 443 ssl;
     server_name portainer.tayrsi.cn;
     ssl_certificate /etc/nginx/ssl/portainer/portainer_bundle.crt;
     ssl_certificate_key /etc/nginx/ssl/portainer/portainer.key;
     ssl_session_timeout 5m;
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
     ssl_prefer_server_ciphers on;
     location / {
        proxy_pass  http://124.223.164.97:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    autoindex on;
    add_header Cache-Control "no-cache, must-revalidate";
 }
# jenkins
server {
    listen 80;
    server_name jenkins.tayrsi.cn; 
    return 301 https://$host$request_uri; 
    add_header Cache-Control "no-cache, must-revalidate";
}

server {
     listen 443 ssl;
     server_name jenkins.tayrsi.cn;
     ssl_certificate /etc/nginx/ssl/jenkins/jenkins_bundle.crt;
     ssl_certificate_key /etc/nginx/ssl/jenkins/jenkins.key;
     ssl_session_timeout 5m;
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
     ssl_prefer_server_ciphers on;
     location / {
        proxy_pass http://124.223.164.97:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    autoindex on;
    add_header Cache-Control "no-cache, must-revalidate";
 }
 